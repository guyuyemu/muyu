# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
depth_multiple: 0.33  # scales module repeats
width_multiple: 0.25  # scales convolution channels
# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [ -1, 1, Conv, [ 64, 3, 2 ] ] # 0-P1/2     1x3x640x640 -> 1x16x320x320
  - [ -1, 1, Conv, [ 128, 3, 2 ] ] # 1-P2/4   1x16x320x320 -> 1x32x160x160
  - [ -1, 3, C2f, [ 128, True ] ]             #1x32x160x160 -> 1x32x160x160
  - [ -1, 1, Conv, [ 256, 3, 2 ] ] # 3-P3/8    1x32x160x160 -> 1x64x80x80
  - [ -1, 6, C2f, [ 256, True ] ]              # 1x64x80x80 -> 1x64x80x80
  - [ -1, 1, Conv, [ 512, 3, 2 ] ] # 5-P4/16    1x64x80x80 -> 1x128x40x40
  - [ -1, 6, C2f, [ 512, True ] ]             #1x128x40x40-> 1x128x40x40
  - [ -1, 1, Conv, [ 1024, 3, 2 ] ] # 7-P5/32  1x128x40x40-> 1x256x20x20
  - [ -1, 3, C2f, [ 1024, True ] ]            # 1x256x20x20-> 1x256x20x20
  - [ -1, 1, SPPF, [ 1024, 5 ] ] # 9             1x256x20x20-> 1x256x20x20

# YOLOv8.0n head
head:
  - [ -1, 1, CARAFE, [1024] ]
  - [ [ -1, 6 ], 1, Concat, [ 1 ] ]  # cat backbone P4
  - [ -1, 3, C2f, [ 512 ] ]  # 13

  - [ -1, 1, CARAFE, [512] ]
  - [ [ -1, 4 ], 1, Concat, [ 1 ] ]  # cat backbone P3
  - [ -1, 3, C2f, [ 256 ] ]  # 17 (P3/8-small)

  - [ -1, 1, Conv, [ 256, 3, 2 ] ]
  - [ [ -1, 12 ], 1, Concat, [ 1 ] ]  # cat head P4
  - [ -1, 3, C2f, [ 512 ] ]  # 20 (P4/16-medium)

  - [ -1, 1, Conv, [ 512, 3, 2 ] ]
  - [ [ -1, 9 ], 1, Concat, [ 1 ] ]  # cat head P5
  - [ -1, 3, C2f, [ 1024 ] ]  # 23 (P5/32-large)

  - [ [ 15, 18, 21 ], 1, Detect, [ nc ] ]  # Detect(P3, P4, P5)